name: Deploy API

on:
  push:
    branches:
      - "**"

jobs:
  build:
    runs-on: self-hosted
    environment: production
    strategy:
      matrix:
        node-version: [20.12.0]
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        run: |
          bun install
        env:
          CI: true
      - name: Public Stage image to GHCR
        uses: elgohr/Publish-Docker-Github-Action@v4
        with:
          name: piarre/next-starter-api/api-stage
          registry: docker.pkg.github.com
          username: piarre
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: Dockerfile
          tags: latest
      - name: Deploy Stage image on server
        env:
          CI: true
          GITHUB_USERNAME: piarre
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export CONTAINER_NAME=$(docker ps -a -q --filter "name=next-starter-api-stage")
          docker login docker.pkg.github.com -u $GITHUB_USERNAME -p $GITHUB_TOKEN
          docker pull docker.pkg.github.com/piarre/next-starter-api/api-stage:latest
          docker stop $CONTAINER_NAME && docker rm $CONTAINER_NAME || true
          docker run -dit \
                  --name $CONTAINER_NAME \
                  -p 2125:2025 \
                  docker.pkg.github.com/piarre/next-starter-api/api-stage:latest
      - name: Check if image is still running
        run: |
          export CONTAINER_STATUS_STAGE=$(docker container inspect $(docker ps -a -q --filter "name=next-starter-api-stage") | jq -r '.[0].State.Status')
          sleep 30
          if [ $CONTAINER_STATUS_STAGE != "running" ]; then
              exit 1
          fi
      - name: Call next workflow
        uses: ./.github/workflows/build.yml
